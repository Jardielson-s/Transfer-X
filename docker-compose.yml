version: '3.8'
services:
  transfer-database:
    image: postgres:16-alpine
    container_name: transfer-database
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: transfer
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    ports:
      - 5433:5432
    networks:
      - network_1
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  transfer-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: transfer-api
    environment:
      - PORT=${PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
        reservations:
          cpus: '0.25'
          memory: 256M
    entrypoint: |
      bash -c "npm run migration:run && npm run start:prod"
    ports:
      - '3000:3000'
    depends_on:
      - transfer-database
    networks:
      - network_1
    volumes:
      - ./src:/app/src

networks:
  network_1:
    driver: bridge
